import os
from urllib.parse import urlparse
from crewai import Agent, Task, Crew, Process

from dotenv import load_dotenv
load_dotenv()

os.environ["OPENAI_API_KEY"] = os.getenv("OPENAI_API_KEY")
os.environ["OPENAI_API_BASE"] = os.getenv("OPENAI_API_BASE")

def get_user_input():
    """–ü–æ–ª—É—á–∏—Ç—å URL –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π"""
    print("=" * 60)
    print("üöÄ SEO CrewAI - –ê–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞ —Å –ø–æ–º–æ—â—å—é –ò–ò")
    print("=" * 60)
    
    while True:
        url = input("\nüìù –í–≤–µ–¥–∏—Ç–µ URL —Å–∞–π—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ").strip()
        
        if not url:
            print("‚ùå URL –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
            continue
            
        # –î–æ–±–∞–≤–ª—è–µ–º http:// –µ—Å–ª–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª –Ω–µ —É–∫–∞–∑–∞–Ω
        if not url.startswith(('http://', 'https://')):
            url = 'https://' + url
            
        # –í–∞–ª–∏–¥–∞—Ü–∏—è URL
        try:
            parsed = urlparse(url)
            if not parsed.netloc:
                raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç URL")
            
            print(f"‚úÖ URL –ø—Ä–∏–Ω—è—Ç: {url}")
            return url
            
        except Exception as e:
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π URL: {e}")
            print("üí° –ü—Ä–∏–º–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ URL: example.com –∏–ª–∏ https://example.com")
            continue

def create_tasks(target_url):
    """–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á–∏ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º URL"""
    task1 = Task(
        description=f"–ü–æ–ª—É—á–∏—Ç—å HTML-–∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ —Å—Å—ã–ª–∫–µ {target_url}, —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å HTML-–∫–æ–¥ –∏ –∏–∑–≤–ª–µ—á—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.",
        expected_output="–°–ø–∏—Å–æ–∫ —Å–ª–æ–≤, –∏–∑–≤–ª–µ—á—ë–Ω–Ω—ã—Ö –∏–∑ HTML-–∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.",
        agent=reader
    )

    task2 = Task(
        description="–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ –≤—ã–±—Ä–∞—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –¥–ª—è SEO.",
        expected_output="–°–ø–∏—Å–æ–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è SEO —Å –∫—Ä–∞—Ç–∫–∏–º –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º –≤—ã–±–æ—Ä–∞.",
        agent=analyst
    )

    task3 = Task(
        description="–°–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –ø–æ —Å–º—ã—Å–ª—É –∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É SEO-—è–¥—Ä–∞ —Å–∞–π—Ç–∞.",
        expected_output="–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ SEO-—è–¥—Ä–æ: —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ —Ç–µ–º–∞—Ç–∏–∫–∞–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è —Å–∞–π—Ç–∞.",
        agent=core_engineer
    )
    
    return [task1, task2, task3]

reader = Agent( 
    role="HTML Parser",
    goal="Parse HTML text from a given URL and extract words from the code",
    backstory=(
        "–≠—Ç–æ—Ç –∞–≥–µ–Ω—Ç –ø–æ–ª—É—á–∞–µ—Ç HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É, –∏–∑–≤–ª–µ–∫–∞–µ—Ç HTML-–∫–æ–¥, "
        "–ø–∞—Ä—Å–∏—Ç –µ–≥–æ –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã. "
        "–û–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å BeautifulSoup –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞."
    ),
    tools=[],
    verbose=True
)

analyst = Agent(
    role="SEO Analyst",
    goal="–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ –≤—ã–±–∏—Ä–∞—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –¥–ª—è SEO",
    backstory=(
        "–≠—Ç–æ—Ç –∞–≥–µ–Ω—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –¥–ª—è SEO. "
        "–û–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ SEO-–º–µ—Ç—Ä–∏–∫–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞. "
        "–ê–≥–µ–Ω—Ç –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç —á–∞—Å—Ç–Ω–æ—Å—Ç—å, –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç—å –∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å —Å–ª–æ–≤, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è. "
        "–û–Ω —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–π –∏ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤."
    ),
    tools=[],
    verbose=True
)

core_engineer = Agent(
    role="SEO Core Developer",
    goal="–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å SEO-—è–¥—Ä–æ",
    backstory=(
        "–≠—Ç–æ—Ç –∞–≥–µ–Ω—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é SEO-—è–¥—Ä–∞ —Å–∞–π—Ç–∞. "
        "–û–Ω –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞, –≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç –∏—Ö –ø–æ —Å–º—ã—Å–ª—É –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É SEO-—è–¥—Ä–∞, "
        "—É—á–∏—Ç—ã–≤–∞–µ—Ç –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã, –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—é –∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å. "
        "–ê–≥–µ–Ω—Ç –ø—Ä–∏–º–µ–Ω—è–µ—Ç –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ SEO –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ —è–¥—Ä–∞, "
        "–∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–∂–µ—Ç —Å–∞–π—Ç—É –∑–∞–Ω—è—Ç—å –≤—ã—Å–æ–∫–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö."        
    ),
    tools=[],
    verbose=True
)
def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º URL –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        target_url = get_user_input()
        
        print(f"\nüîç –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞: {target_url}")
        print("‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...\n")
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º URL
        tasks = create_tasks(target_url)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É –∞–≥–µ–Ω—Ç–æ–≤
        crew = Crew(
            agents=[reader, analyst, core_engineer],
            tasks=tasks,
            verbose=True,
            process=Process.sequential
        )
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
        result = crew.kickoff()
        
        print("\n" + "="*60)
        print("üéâ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("="*60)
        
        return result
        
    except KeyboardInterrupt:
        print("\n\n‚ùå –ê–Ω–∞–ª–∏–∑ –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
        return None
    except Exception as e:
        print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        return None

if __name__ == "__main__":
    main()
